/*
 *Bacharelado em Ciência da Computação 7ºS
 *Anderson Miyada RA: 525626
 *Jorge Takano Júnior RA: 529745
 *
 ***********************************************************************
 * OBS: O algoritmo não converge quando se tenta treinar o neurônio C3 *
 ***********************************************************************
 *
 *
 *
 */
package alfabeto;

/**
 *
 * @author anderson
 */
public class Alfabeto {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        int n = 25;
        double eta = 0.2;
        
       
                  
        Perceptron c0 = new Perceptron(n);
        Perceptron c1 = new Perceptron(n);
        Perceptron c2 = new Perceptron(n);
        Perceptron c3 = new Perceptron(n);
        Perceptron c4 = new Perceptron(n);
       
        int pd[][] = { 
                        {0,1,1,1,0,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,0,1,0,1,0},// letra A
                        {0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,0,1,1,0,0},// Letra B
                        {0,0,1,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0},// Letra C
                        {0,1,1,0,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,0,0},// Letra D
                        {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,1,0},// Letra E
                        {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0},// Letra F
                        {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,0,1,1,0,0},// Letra G
                        {0,1,0,1,0,0,1,0,1,0,0,1,1,1,0,0,1,0,1,0,0,1,0,0,0},// Letra H
                        {0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0},// Letra I
                        {0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0},// Letra J
                        {0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,1},// Letra K
                        {0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0},// Letra L
                        {1,0,0,0,1,1,1,0,1,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,1},// Letra M
                        {1,0,0,0,1,1,1,0,0,1,1,0,1,0,1,1,0,0,1,1,1,0,0,0,1},// Letra N
                        {0,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0},// Letra O
                        {0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0},// Letra P
                        {0,0,1,0,0,0,1,0,1,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1},// Letra Q
                        {0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,0,1,0,1,0},// Letra R
                        {0,0,1,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0},// Letra S
                        {0,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0},// Letra T
                        {0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0},// Letra U
                        {1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,1,0,1,0,0,0,1,0,0},// Letra V
                        {1,0,0,0,1,1,0,0,0,1,1,0,1,0,1,1,1,0,1,1,1,0,0,0,1},// Letra W
                        {1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1},// Letra X
                        {1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0},// Letra Y
                        {1,1,1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,1,1,1} // Letra Z
                     };
            
        //Saida desejada
        int dj[][] = {
                        {0,0,0,0,0}, {0,0,0,0,1}, {0,0,0,1,0}, {0,0,0,1,1}, {0,0,1,0,0}, // A,B,C,D,E
                        {0,0,1,0,1}, {0,0,1,1,0}, {0,0,1,1,1}, {0,1,0,0,0}, {0,1,0,0,1}, // F,G,H,I,J
                        {0,1,0,1,0}, {0,1,0,1,1}, {0,1,1,0,0}, {0,1,1,0,1}, {0,1,1,1,0}, // K,L,M,N,O
                        {0,1,1,1,1}, {1,0,0,0,1}, {1,0,0,1,0}, {1,0,0,1,1}, {1,0,1,0,0}, // P,Q,R,S,T
                        {1,0,1,0,1}, {1,0,1,1,0}, {1,1,0,0,0}, {1,1,0,0,1}, {1,1,0,1,0}, // U,V,X,W,Y
                                                                            {1,1,1,0,0}  // Z
                     };
        //treinar = pd  -> Padrão de entrada
        //          dj  -> Saida desejada
        //          eta -> Valor do eta
        //      inteiro -> Posição do vetor dj
        c0.treinar(pd, dj, eta, 0);
        System.out.println("C0 = Treinado -> " + c0.y(new int[] {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,1,0})); //E
        
        c1.treinar(pd, dj, eta, 1);
        System.out.println("C1 = Treinado -> " + c1.y(new int[] {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,1,0}));
        
        c2.treinar(pd, dj, eta, 2);
        System.out.println("C2 = Treinado -> " + c2.y(new int[] {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,1,0}));
        
        c3.treinar(pd, dj, eta, 3);
        System.out.println("C3 = Treinado -> " + c3.y(new int[] {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,1,0}));
        
        c4.treinar(pd, dj, eta, 4);
        System.out.println("C4 = Treinado -> " + c4.y(new int[] {0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,1,0}));
    }
    
    
}
